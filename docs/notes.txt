
Current:
-create organization form
-create residency form
-figure out how to show formdata on a page
-make the 'organization' page showing (noneditable) data from a form
including the organization data, and (for now) all residencies attached
to thatorganization.



Now:
fixed-do wording changes
fixed-why do 144.77.17.54:8000 and pistonbot.com:8000 look different?
fixed --pistonbot has the side bars with add org/residencie.
-How to show formdata on a page:
-show list of orgs
-show list of residencies


-page name at top left almost totally hidden?

This has some tricks:
https://groups.google.com/forum/#!topic/mezzanine-users/FvCUK9k1NRM

This works:
single_form = Form.objects.get(slug="organizationspace")
formentry_list=FormEntry.objects.filter(form_id=single_form.id)
label_list = [ ]
field_list = Field.objects.filter(form_id=single_form.id)

look at test.py:wq



this does?
single_form = Form.objects.all()

This works
pages=Page.objects.all()

? I have different tables? WTF?

I have different pages between pistonbot.com:8000 and 144.77.17.54:8000

http://144.76.17.54:8000/admin/pages/page/
http://pistonbot.com:8000/admin/pages/page/

looking at log they both appear as requests with the same details except
for the size of /admin/pages/page. 

pages_page has a site_id. ah. Activated when I added pistonbot.com site.
ugh!!!

now I have a superset, a mess really.



Early mezzanine notes

-mkdir templates/ put index.html and whatever in there.

Default templates for our install on ubunto:

/usr/local/lib/python2.7/dist-packages/mezzanine/core/templates/
and on osx
/Library/Python/2.7/site-packages/mezzanine/core/templates

Copy those templates to project templates to replace them.

There is a command which will copy all of the templates, but I'm
not sure yet if that is a good idea. For now I think one at a time.
tried doing it, not sure it is working :-/ rather, which tmeplate is being used.

http://mezzanine.jupo.org/docs/frequently-asked-questions.html#where-are-all-the-templates-i-can-modify


 python manage.py collecttemplates --help

Adding/Editing a page type:
edit models.py, see current example.

Now working on residency and space models. in sqlite3 drop the current
tables:
(sqlite can't do migrations, but it is easy to use rather then postgres
or mysql for now)
sqlite> drop table hir_residency;
sqlite> drop table hir_space;

South  migrations: this creates the initial migration.
python ./manage.py schemamigration hir --initial
python ./manage.py migrate hir

After the initial migration do this:
python ./manage.py schemamigration hir --auto 
python ./manage.py migrate hir

ugh...
to recreate the database:
Don't do this lightly!
python manage.py createdb --noinput

...
I reran mezzanine-project hir
-add hir to installed apps.
uncomment mezzanine.accounts from installed pps

python ./manage.py createsuperuser



Add to github
1. create repository on git hub
2. mv current hir to hir_temp
3. clone
sudo git clone git://github.com/RichGibson/hir.git
4. sudo chown -R richgibson:richgibson hir
5. copy things back from hir_temp
6.  git remote set-url origin git@github.com:RichGibson/hir.git


...
Copy it to run on my laptop. 
I had to do this:
touch __init__.py
Where is an init.py? Confused, oh well.

....
Adding extra fields to a Form

# Allow extra fields types to be defined via the FORMS_EXTRA_FIELDS
# setting, which should contain a sequence of three-item sequences,
# each containing the ID, dotted import path for the field class,
# and field name, for each custom field type.
# You get to make up the ID, but it can't conflict with 'CLASSES;
# so pick well :-/
# see mezzanine/forms/fields.py for the code where this setting isÂ·
# defined

in settings.py
FORMS_EXTRA_FIELDS= [ [42,'extra_fields.py','LABEL']]

Look at 
/usr/local/lib/python2.7/dist-packages/django/forms/fields.py for examples of the 
'field_class'
....
Change name of page slug:
update pages_page set slug='organization' where slug='organizationspace';

...........................................
Change wording of login/signup block.
1. Where is it?

Inspect element in browser, it is class="panel... look for that in 
base.html.
might be includes/user_panel.html


....
Deployment notes
/etc/apache2/sites-available/hir.conf (started with a skeleton of an existing site)

python ./manage.py collectstatic
edit wsgi.py
sudo a2ensite hir.conf 
yay internal server error.
That means something is happening.

And then dork with a sys.path.append in settings, which seems unneeded/wrong, but works :-/
-set DEBUG to false
django_site - seems like it should be www.hackerinresidence.org, but then my pages don't show up :-/

.....
for test fixtures to work.
pip install pyyaml

to make my fixture: 
python ./manage.py dumpdata hir --format=yaml --indent=4 > fixtures/hir.yaml

This copies everything in the database, might matter for some things to have this
python ./manage.py dumpdata  --format=yaml --indent=4 > fixtures/all.yaml

....
Testing/fixture 'fun'
This works
python ./manage.py loaddata fixtures/hir.json 

But having fixtures = ['hir.json'] in my test class doesn't work.

